# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: NodeCI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x, 24.x]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Enable Corepack
        run: corepack enable
      - run: yarn install
      - run: yarn build
      - name: Run tests
        # Unfortunatelly, Github Actions freaks out when sees the glob patterns, so this is a workaround
        # around the issue - we list all the test files and pass them to tsx.
        run: |
          TEST_FILES=$(find src test -name '*.spec.ts' | tr '\n' ' ')
          npx tsx --test $TEST_FILES
        shell: bash
      - run: node dist/cli.js -c test/ci-test.config.json
