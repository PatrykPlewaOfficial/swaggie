/**
<% it.parameters.forEach((parameter) => { %>
   * @param <%= parameter.name %> <%= parameter.optional ? '(optional)' : '' %> <%= parameter.name !== parameter.originalName ? `(API name: ${parameter.originalName})` : '' %>

<% }); -%>
   * @param $config (optional) Additional configuration for TanStack Query
   * @param $httpConfig (optional) Additional configuration for xior request (actually executes the request)
   */
export function <%= it.rqOpName %><TData = <%~ it.returnType %>, TError = Error>(<% it.parameters.forEach((parameter) => { %>
  <%= parameter.name %><%= parameter.skippable ? '?' : '' %>: <%~ parameter.type %> <%= parameter.optional ? (parameter.skippable ? '| null' : '| null | undefined') : '' %>,
    <% }); %>
$config?: Omit<
  UseQueryOptions<<%~ it.returnType %>, TError, TData>,
  'queryKey' | 'queryFn'
>,
    $httpConfig?: XiorRequestConfig
  ) {
  return useQuery<<%~ it.returnType %>, TError, TData>({
    queryKey: ['<%= it.clientName %>', '<%= it.opKey %>', <% it.parameters.forEach((parameter) => { %><%= parameter.name %>, <% }); %>],
    queryFn: () => <%= it.clientName %>Client.<%= it.name %>(<% it.parameters.forEach((parameter) => { %>
<%= parameter.name %>, <% }); %>$httpConfig).then(res => res.data),
    ...$config
  });
}
<%= it.rqOpName %>.queryKeys = ['<%= it.clientName %>', '<%= it.opKey %>'];
