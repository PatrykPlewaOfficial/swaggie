  /**
<% it.parameters.forEach((parameter) => { %>
   * @param <%= parameter.name %> <%= parameter.optional ? '(optional)' : '' %> <%= parameter.name !== parameter.originalName ? `(API name: ${parameter.originalName})` : '' %>

<% }); -%>
   */
  <%= it.name %>(<% it.parameters.forEach((parameter) => { %>
<%= parameter.name %>: <%~ parameter.type %> <%= parameter.optional ? '| null | undefined' : '' %>,
    <% }); %>
$config?: RequestInit
  ): Promise<<%~ it.returnType %>> {
    let url = defaults.baseUrl + '<%= it.url %>?';
<% if(it.pathParams && it.pathParams.length > 0) {
  it.pathParams.forEach((parameter) => { %>
    url = url.replace('{<%= parameter.name %>}', encodeURIComponent("" + <%= parameter.name %>));
<% });
} %>
<% if(it.query && it.query.length > 0) { %>
  <% it.query.forEach((parameter) => { %>
  if (<%= parameter.name %> !== undefined) {
  <% if(!!parameter.original && parameter.original.type === 'array') { %>
    <%= parameter.name %>.forEach(item => { url += '<%= parameter.originalName %>=' + serializeQueryParam(item) + "&"; });
  <% } else {%>
    url += '<%= parameter.originalName %>=' + serializeQueryParam(<%= parameter.name %>) + "&";
  <% } %>
  }
  <% }); %>
<% } %>

    return fetch(url, {
      method: '<%= it.method %>',
<% if(it.body) { %>
<% if(it.body.contentType === 'binary') { %>
      body: <%= it.body.name %>,
<% } else if(it.body.contentType === 'urlencoded') { %>
      body: new URLSearchParams(<%= it.body.name %>),
<% } else { %>
      body: JSON.stringify(<%= it.body.name %>),
<% } %>
<% } %>
<% if(it.headers && it.headers.length > 0) { %>
      headers: {
    <% it.headers.forEach((parameter) => { %>
    '<%= parameter.originalName %>': <%= parameter.name %>,
    <% }); %>
  },
<% } %>
      ...$config,
    }).then((response) => response.json() as Promise<<%~ it.returnType %>>);
  },
