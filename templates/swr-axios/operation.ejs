  /**
<% it.parameters.forEach((parameter) => { %>
   * @param <%= parameter.name %> <%= parameter.optional ? '(optional)' : '' %> <%= parameter.name != parameter.originalName ? `(API name: ${parameter.originalName})` : '' %>

<% }); -%>
   */
  <%= it.name %>(<% it.parameters.forEach((parameter) => { %>
  <%= parameter.name %>: <%~ parameter.type %> <%= parameter.optional ? ' | null | undefined' : '' %>,
    <% }); %>
  $config?: AxiosRequestConfig
  ): AxiosPromise<<%~ it.returnType %>> {
    let url = '<%= it.url %>';

<% if(it.pathParams && it.pathParams.length > 0) {
  it.pathParams.forEach((parameter) => { %>
    url = url.replace('{<%= parameter.name %>}', encodeURIComponent("" + <%= parameter.name %>));
<% });
} _%>
<% if(it.formData && it.formData.length > 0) { _%>
    const formDataBody = new FormData();
  <% it.formData.forEach((parameter) => { %>
    if (!!<%= parameter.name %>) {
    <% if(parameter.original && parameter.original.type === 'array') { %>
      <%= parameter.name %>.forEach((f: any) => formDataBody.append("<%= parameter.originalName %>", f));
    <% } else { %>
      formDataBody.append("<%= parameter.originalName %>", <%= parameter.name %><%= parameter.type !== 'string' && parameter.type !== 'File' && parameter.type !== 'Blob' ? '.toString()' : '' %>);
    <% } %>
    }
<% });
} _%>

    return axios.request<<%~ it.returnType %>>({
      url: url,
      method: '<%= it.method %>',
<% if(it.formData && it.formData.length > 0) { _%>
      data: formDataBody,
<% } else if(it.body) { _%>
      data: <%= it.body.name %>,
<% } _%>
<% if(it.query && it.query.length > 0) { _%>
      params: {
        <% it.query.forEach((parameter) => { %>
    '<%= parameter.originalName %>': serializeQueryParam(<%= parameter.name %>),
    <% }); %>
      },
<% } _%>
<% if(it.headers && it.headers.length > 0) { _%>
      headers: {
        <% it.headers.forEach((parameter) => { %>
    <% if (parameter.value) { _%>
    '<%= parameter.originalName %>': '<%= parameter.value %>',
    <% } else { _%>
    '<%= parameter.originalName %>': <%= parameter.name %>,
    <% } _%>
    <% }); %>
      },
<% } _%>
      ...$config,
    });
  },
